result
###                                                                     ###
###########################################################################
###########################################################################
setwd('H:/Oxford/Chapter_three/github_version/1_prepare_climate_data')
library(tidyverse)
library(rpmodel)
##------------------------------------------------
##  lets try climate data prepared by Imma first
##------------------------------------------------
pizzass<-read.csv("ANK_gapfill_erai_monthly_1979_2017.csv")
new_pizza1<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizzass<-read.csv("BOB_gapfill_erai_monthly_1979_2017.csv")
new_pizza2<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
new_pizza2$SWmean<-NaN
pizzass<-read.csv("KOG_gapfill_erai_monthly_1979_2017.csv")
new_pizza3<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizza<-rbind(new_pizza2,new_pizza1,new_pizza3)
result<-aggregate(pizza[, 3:6], list(pizza$site), mean)
result$grow_temp<-result$Tmax*(1/2+1/pi)+result$Tmin*(1/2-1/pi)
##-----------
##  lat lon CO2
##-----------
result$Latitude=c(6.6910,5.2680,7.2616)
result$Longitude=c(-1.3389,-2.6955,-1.1501) #From Moore 2017
result$co2=414
result$elv=c(114,235,229)
##--------
##  ppfd
##--------
library(ncdf4)
library(elevatr)
library(raster)
# firstly, we load wedfi watch data, a big nc file, average them (2006-2015) into one map
#load("organized_climate.rda")
ncin <- nc_open("H:/Oxford/Chapter_one/From_imma/climate_data/1982_2016.ppfd.nc") # The unit is mol/m2/month
ppfd_map <- ncvar_get(ncin,"ppfd")
ppfd_map<-apply(ppfd_map[,,277:420], c(1,2), mean,na.rm=T)##----------------------
rotate_it <- function(x) t(apply(x, 2, rev)) #self-defined function for rotating matrix
ppfd_map<-raster(rotate_it(ppfd_map))
ppfd_map<-flip(ppfd_map,1)
extent(ppfd_map) <- extent(-180, 180, -90, 90) #adjust its extent
crs(ppfd_map) <-'+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0'
e <- extent(-4, 0, 4, 9)
Ghana_map <- crop(ppfd_map, e)
plot(Ghana_map)
Ghana_pointlist<-data.frame(rasterToPoints(Ghana_map))
prj_dd <-Ghana_map@crs@projargs
site2<-result[,c("Longitude","Latitude","elv")]
centroid_spdf <- SpatialPointsDataFrame(
site2[,1:2], proj4string=Ghana_map@crs, site2)
cent_max <- raster::extract(ppfd_map,             # raster layer
centroid_spdf,   # SPDF with centroids for buffer
buffer = 1,     # buffer size, units depend on CRS
fun=mean,         # what to value to extract
df=TRUE)         # return a dataframe?
result$ppfd<-cent_max$layer
# I have also downloaded data from ERA5-land using google earth engine
ERA5_ppfd<-read.csv('Ghana_Amazon_radiation_ERA5_land.csv')%>%
mutate( # extract cloud state, 00 denote no cloud
month = substr(date,6,7),
# extract month from the 6th and 7th digits
SITE = substr(name,1,3))%>%
# extract site from the 1st to 3rd digits
group_by(SITE)%>%
summarise(shortwave_radiation = mean(surface_solar_radiation_downwards_sum)/30.5/24/3600/ 1000000 *3600*24 *0.45*J_to_mol )%>%
filter(SITE %in% c('ANK','BOB','KOG'))
ERA5_ppfd<-read.csv('Ghana_Amazon_radiation_ERA5_land.csv')%>%
mutate( # extract cloud state, 00 denote no cloud
month = substr(date,6,7),
# extract month from the 6th and 7th digits
SITE = substr(name,1,3))%>%
# extract site from the 1st to 3rd digits
group_by(SITE)%>%
summarise(shortwave_radiation = mean(surface_solar_radiation_downwards_sum)/30.5/24/3600/ 1000000 *3600*24 *0.45*J_to_mol )%>%
filter(SITE %in% c('ANK','BOB','KOG'))
result$ppfd<-ERA5_ppfd$shortwave_radiation
result
save(result,file = "organized_climate_withppfd.rda")
setwd('H:/Oxford/Chapter_three/github_version/3.supplementary_compare_climate_variable/')
rm(list=ls())
library(multcompView)
library(tidyverse)
library(Hmisc)
library(multcomp)
library(vegan)
library(ARTofR)
library(tidyverse)
library(ggplot2)
library(ggtext)
library(ggsci)
library(ggpubr)
source('H:/Oxford/Chapter_three/github_version/Rpmodel_V3/subroutines.R' )
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
#The main reference is this paper, by Donald F. Gatz and Luther Smith, where 3
#formula based estimators are compared with bootstrap results. The best
#approximation to the bootstrap result comes from Cochran (1977):
# https://stats.stackexchange.com/questions/25895/computing-standard-error-in-weighted-mean-estimation
# the above method is wrong, now replaced with:
# https://githubmemory.com/repo/harrelfe/Hmisc/issues/138
# https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Statistical_properties
weighted.var.se <- function(x, weights, na.rm = TRUE){
var <- Hmisc::wtd.var(x, weights, na.rm)
weights <- sum( (weights / sum(weights))^2 )
sqrt(var*weights)
}
standard_error_calc <- function(x, na.rm=FALSE) {
if (na.rm) x <- na.omit(x)
sqrt(var(x)/length(x))
}
# significant test was done with Z test
simple_z_test<-function(mean1,mean2,se1,se2){
z_stat <- (mean1 - mean2) /
sqrt(se1^2 + se2^2)
p_value<-1 - pnorm(abs(z_stat)) + pnorm(-abs(z_stat))
return(data.frame(z_stat,p_value))
}
List_of_site<-c('ANK','BOB','KOG')
load('../2_Figure_four_timeseries_of_fapar/organized_climate_withppfd_two_fapar.rda')
P_model_raw<-result%>%
mutate(SITE = Group.1,
jmax25_to_jmax=ftemp_inst_jmax( grow_temp , grow_temp , tcref = 25.0 ),
vcmax25_to_vcmax=ftemp_inst_vcmax( grow_temp , grow_temp , tcref = 25.0 ))
Field_measurement_table<-as.data.frame(List_of_site)%>%
dplyr::rename(SITE=List_of_site)%>%
left_join(.,P_model_raw%>%dplyr::select(SITE,jmax25_to_jmax,vcmax25_to_vcmax))
# then run the default P_model
setwd("H:/Oxford/Chapter_three/github_version/Rpmodel_V3")
files.sources = list.files(pattern ='*.R')
sapply(files.sources, source)
setwd('H:/Oxford/Chapter_three/github_version/3.supplementary_compare_climate_variable/')
colnames(result)[1]<-'SITE'
result$fapar_no_cloud<-result$fapar_no_cloud/100
result$ppfd<- result$ppfd/30 # from mol/m2/month to mol/m2/d,
result$VPDmean=result$VPDmean*1000
for (i in 1:3){
temp_result<-result[i,]
rp_model_output<-rpmodel(
tc=temp_result$Tmean,
vpd=temp_result$VPDmean,
co2=temp_result$co2,
fapar=temp_result$fapar_no_cloud,
ppfd=temp_result$ppfd,
patm = NA,
elv=temp_result$elv,
beta = 146,
soilm = 1,
meanalpha = 1,
apar_soilm = 0,
bpar_soilm = 0.733,
c4 = FALSE,
method_jmaxlim = "wang17", #Other options are "smith19" or 'none' "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE,
returnvar = NULL,
verbose = FALSE
)
if (i==1) {
rp_model_output2<-as.data.frame(rp_model_output)
} else {
rp_model_output2[i,]<-as.data.frame(rp_model_output)
}
rp_model_output2$SITE[i]<-as.character(result[i,'SITE'])
}
result_no_soilm<-dplyr::left_join(result,rp_model_output2,by="SITE")
result_no_soilm$vcmax<-result_no_soilm$vcmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$vcmax25<-result_no_soilm$vcmax25 * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax<-result_no_soilm$jmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax25<-result_no_soilm$jmax25* 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$gpp<-result_no_soilm$gpp / 10^6 * 10000 * 365 #from g C m-2 day-1 to MgC per ha yr-1
result_no_soilm<-result_no_soilm%>%
mutate(vcmax=vcmax/fapar_no_cloud,
vcmax25 = vcmax25/fapar_no_cloud,
jmax = jmax/fapar_no_cloud,
jmax25 = jmax25/fapar_no_cloud,
iabs_no_fpar=iabs/fapar_no_cloud)%>%
dplyr::rename(iabs_with_fpar=iabs)
##openxlsx::write.xlsx(result_no_soilm,file= paste0('P_model_raw',Sys.Date(),'.xlsx'))
P_model_raw<-openxlsx::read.xlsx('P_model_raw2023-03-14.xlsx')
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                    ppfd                                 ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Sum_with_error <- function(x, na.rm=TRUE){
if (na.rm) x <- na.omit(x)
x2 <- x^2
sqrt(sum(x2))
}
J_to_mol = 4.6 # this will convert J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1
ANK_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/ANK_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
BOB_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/BOB_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
KOG_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/KOG_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
result$ppfd_field[result$SITE=='ANK'] <- mean(ANK_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5 #the 0.45 is photosynthetically active fraction (which is called PAR, see Wang et al Nature plants)
result$ppfd_field[result$SITE=='BOB'] <- mean(BOB_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field[result$SITE=='KOG'] <- mean(KOG_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='ANK'] <- mean(ANK_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='BOB'] <- mean(BOB_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='KOG'] <- mean(KOG_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
cwm_table<-result
List_of_site<-c('KOG','BOB','ANK')
cls <- data.frame(SITE=List_of_site, colour=c("#deebf7","#9ecae1","#3182bd"))
cwm_table <- left_join(cwm_table, cls, by="SITE")
#cwm_table$standard_dev<-as.numeric(cwm_table$standard_dev)  #change variance into standard deviation
#cwm_table[,2]<-as.numeric(cwm_table[,2])
cwm_table$SITE <- factor(cwm_table$SITE, levels = c("ANK", "BOB", "KOG"))
ggplot(cwm_table) +
geom_bar( aes(x=SITE, y=ppfd_field), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_point(aes(x=SITE, y=ppfd),color='red', size=2)+
geom_errorbar(aes(x=SITE, y=ppfd_field, ymin=ppfd_field-ppfd_field_se, ymax=ppfd_field+ppfd_field_se),alpha=0.3, size=1.3,width=0.4)+ theme_bw()+
ylab("PPFD (mol/m2/d)")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$ppfd_field,na.rm=T)*0.6,max(cwm_table$ppfd_field,na.rm=T)*1.2)) +
labs(title = "") +
theme(title = element_text(size=9),
plot.title = element_markdown())
Field_measurement_table<-result%>%
dplyr::select(SITE,ppfd_field,ppfd_field_se)%>%
left_join(Field_measurement_table,.,by='SITE')
cwm_table
source("H:/Oxford/Chapter_three/github_version/2_Figure_four_timeseries_of_fapar/analyse_the_time_series.R")
setwd('H:/Oxford/Chapter_three/github_version/3.supplementary_compare_climate_variable/')
rm(list=ls())
library(multcompView)
library(tidyverse)
library(Hmisc)
library(multcomp)
library(vegan)
library(ARTofR)
library(tidyverse)
library(ggplot2)
library(ggtext)
library(ggsci)
library(ggpubr)
source('H:/Oxford/Chapter_three/github_version/Rpmodel_V3/subroutines.R' )
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
#The main reference is this paper, by Donald F. Gatz and Luther Smith, where 3
#formula based estimators are compared with bootstrap results. The best
#approximation to the bootstrap result comes from Cochran (1977):
# https://stats.stackexchange.com/questions/25895/computing-standard-error-in-weighted-mean-estimation
# the above method is wrong, now replaced with:
# https://githubmemory.com/repo/harrelfe/Hmisc/issues/138
# https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Statistical_properties
weighted.var.se <- function(x, weights, na.rm = TRUE){
var <- Hmisc::wtd.var(x, weights, na.rm)
weights <- sum( (weights / sum(weights))^2 )
sqrt(var*weights)
}
standard_error_calc <- function(x, na.rm=FALSE) {
if (na.rm) x <- na.omit(x)
sqrt(var(x)/length(x))
}
# significant test was done with Z test
simple_z_test<-function(mean1,mean2,se1,se2){
z_stat <- (mean1 - mean2) /
sqrt(se1^2 + se2^2)
p_value<-1 - pnorm(abs(z_stat)) + pnorm(-abs(z_stat))
return(data.frame(z_stat,p_value))
}
List_of_site<-c('ANK','BOB','KOG')
load('../2_Figure_four_timeseries_of_fapar/organized_climate_withppfd_two_fapar.rda')
P_model_raw<-result%>%
mutate(SITE = Group.1,
jmax25_to_jmax=ftemp_inst_jmax( grow_temp , grow_temp , tcref = 25.0 ),
vcmax25_to_vcmax=ftemp_inst_vcmax( grow_temp , grow_temp , tcref = 25.0 ))
Field_measurement_table<-as.data.frame(List_of_site)%>%
dplyr::rename(SITE=List_of_site)%>%
left_join(.,P_model_raw%>%dplyr::select(SITE,jmax25_to_jmax,vcmax25_to_vcmax))
# then run the default P_model
setwd("H:/Oxford/Chapter_three/github_version/Rpmodel_V3")
files.sources = list.files(pattern ='*.R')
sapply(files.sources, source)
setwd('H:/Oxford/Chapter_three/github_version/3.supplementary_compare_climate_variable/')
colnames(result)[1]<-'SITE'
result$fapar_no_cloud<-result$fapar_no_cloud/100
result$ppfd<- result$ppfd/30 # from mol/m2/month to mol/m2/d,
result$VPDmean=result$VPDmean*1000
for (i in 1:3){
temp_result<-result[i,]
rp_model_output<-rpmodel(
tc=temp_result$Tmean,
vpd=temp_result$VPDmean,
co2=temp_result$co2,
fapar=temp_result$fapar_no_cloud,
ppfd=temp_result$ppfd,
patm = NA,
elv=temp_result$elv,
beta = 146,
soilm = 1,
meanalpha = 1,
apar_soilm = 0,
bpar_soilm = 0.733,
c4 = FALSE,
method_jmaxlim = "wang17", #Other options are "smith19" or 'none' "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE,
returnvar = NULL,
verbose = FALSE
)
if (i==1) {
rp_model_output2<-as.data.frame(rp_model_output)
} else {
rp_model_output2[i,]<-as.data.frame(rp_model_output)
}
rp_model_output2$SITE[i]<-as.character(result[i,'SITE'])
}
result_no_soilm<-dplyr::left_join(result,rp_model_output2,by="SITE")
result_no_soilm$vcmax<-result_no_soilm$vcmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$vcmax25<-result_no_soilm$vcmax25 * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax<-result_no_soilm$jmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax25<-result_no_soilm$jmax25* 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$gpp<-result_no_soilm$gpp / 10^6 * 10000 * 365 #from g C m-2 day-1 to MgC per ha yr-1
result_no_soilm<-result_no_soilm%>%
mutate(vcmax=vcmax/fapar_no_cloud,
vcmax25 = vcmax25/fapar_no_cloud,
jmax = jmax/fapar_no_cloud,
jmax25 = jmax25/fapar_no_cloud,
iabs_no_fpar=iabs/fapar_no_cloud)%>%
dplyr::rename(iabs_with_fpar=iabs)
##openxlsx::write.xlsx(result_no_soilm,file= paste0('P_model_raw',Sys.Date(),'.xlsx'))
P_model_raw<-openxlsx::read.xlsx('P_model_raw2023-03-14.xlsx')
Sum_with_error <- function(x, na.rm=TRUE){
if (na.rm) x <- na.omit(x)
x2 <- x^2
sqrt(sum(x2))
}
J_to_mol = 4.6 # this will convert J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1
ANK_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/ANK_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
BOB_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/BOB_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
KOG_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/KOG_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
result$ppfd_field[result$SITE=='ANK'] <- mean(ANK_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5 #the 0.45 is photosynthetically active fraction (which is called PAR, see Wang et al Nature plants)
result$ppfd_field[result$SITE=='BOB'] <- mean(BOB_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field[result$SITE=='KOG'] <- mean(KOG_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='ANK'] <- mean(ANK_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='BOB'] <- mean(BOB_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='KOG'] <- mean(KOG_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
cwm_table<-result
List_of_site<-c('KOG','BOB','ANK')
cls <- data.frame(SITE=List_of_site, colour=c("#deebf7","#9ecae1","#3182bd"))
cwm_table <- left_join(cwm_table, cls, by="SITE")
#cwm_table$standard_dev<-as.numeric(cwm_table$standard_dev)  #change variance into standard deviation
#cwm_table[,2]<-as.numeric(cwm_table[,2])
cwm_table$SITE <- factor(cwm_table$SITE, levels = c("ANK", "BOB", "KOG"))
# cwm_table$SITE <- str_replace(cwm_table$SITE, "ANK", "ANK (wet)")
# cwm_table$SITE <- str_replace(cwm_table$SITE, "BOB", "BOB (mid)")
# cwm_table$SITE <- str_replace(cwm_table$SITE, "KOG", "KOG (dry)")
ggplot(cwm_table) +
geom_bar( aes(x=SITE, y=ppfd_field), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_point(aes(x=SITE, y=ppfd),color='red', size=2)+
geom_errorbar(aes(x=SITE, y=ppfd_field, ymin=ppfd_field-ppfd_field_se, ymax=ppfd_field+ppfd_field_se),alpha=0.3, size=1.3,width=0.4)+ theme_bw()+
ylab("PPFD (mol/m2/d)")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$ppfd_field,na.rm=T)*0.6,max(cwm_table$ppfd_field,na.rm=T)*1.2)) +
labs(title = "") +
theme(title = element_text(size=9),
plot.title = element_markdown())
cwm_table
load('../2_Figure_four_timeseries_of_fapar/organized_climate_withppfd_two_fapar.rda')
source("H:/Oxford/Chapter_three/github_version/1_prepare_climate_data/To_organise_these_data.r")
source("H:/Oxford/Chapter_three/github_version/2_Figure_four_timeseries_of_fapar/analyse_the_time_series.R")
setwd('H:/Oxford/Chapter_three/github_version/3.supplementary_compare_climate_variable/')
rm(list=ls())
library(multcompView)
library(tidyverse)
library(Hmisc)
library(multcomp)
library(vegan)
library(ARTofR)
library(tidyverse)
library(ggplot2)
library(ggtext)
library(ggsci)
library(ggpubr)
source('H:/Oxford/Chapter_three/github_version/Rpmodel_V3/subroutines.R' )
scores_na <- function(x, ...) {
not_na <- !is.na(x)
scores <- rep(NA, length(x))
scores[not_na] <- outliers::scores(na.omit(x), ...)
scores
}
#The main reference is this paper, by Donald F. Gatz and Luther Smith, where 3
#formula based estimators are compared with bootstrap results. The best
#approximation to the bootstrap result comes from Cochran (1977):
# https://stats.stackexchange.com/questions/25895/computing-standard-error-in-weighted-mean-estimation
# the above method is wrong, now replaced with:
# https://githubmemory.com/repo/harrelfe/Hmisc/issues/138
# https://en.wikipedia.org/wiki/Weighted_arithmetic_mean#Statistical_properties
weighted.var.se <- function(x, weights, na.rm = TRUE){
var <- Hmisc::wtd.var(x, weights, na.rm)
weights <- sum( (weights / sum(weights))^2 )
sqrt(var*weights)
}
standard_error_calc <- function(x, na.rm=FALSE) {
if (na.rm) x <- na.omit(x)
sqrt(var(x)/length(x))
}
# significant test was done with Z test
simple_z_test<-function(mean1,mean2,se1,se2){
z_stat <- (mean1 - mean2) /
sqrt(se1^2 + se2^2)
p_value<-1 - pnorm(abs(z_stat)) + pnorm(-abs(z_stat))
return(data.frame(z_stat,p_value))
}
List_of_site<-c('ANK','BOB','KOG')
load('../2_Figure_four_timeseries_of_fapar/organized_climate_withppfd_two_fapar.rda')
P_model_raw<-result%>%
mutate(SITE = Group.1,
jmax25_to_jmax=ftemp_inst_jmax( grow_temp , grow_temp , tcref = 25.0 ),
vcmax25_to_vcmax=ftemp_inst_vcmax( grow_temp , grow_temp , tcref = 25.0 ))
Field_measurement_table<-as.data.frame(List_of_site)%>%
dplyr::rename(SITE=List_of_site)%>%
left_join(.,P_model_raw%>%dplyr::select(SITE,jmax25_to_jmax,vcmax25_to_vcmax))
# then run the default P_model
setwd("H:/Oxford/Chapter_three/github_version/Rpmodel_V3")
files.sources = list.files(pattern ='*.R')
sapply(files.sources, source)
setwd('H:/Oxford/Chapter_three/github_version/3.supplementary_compare_climate_variable/')
colnames(result)[1]<-'SITE'
result$fapar_no_cloud<-result$fapar_no_cloud/100
result$ppfd<- result$ppfd/30 # from mol/m2/month to mol/m2/d,
result$VPDmean=result$VPDmean*1000
for (i in 1:3){
temp_result<-result[i,]
rp_model_output<-rpmodel(
tc=temp_result$Tmean,
vpd=temp_result$VPDmean,
co2=temp_result$co2,
fapar=temp_result$fapar_no_cloud,
ppfd=temp_result$ppfd,
patm = NA,
elv=temp_result$elv,
beta = 146,
soilm = 1,
meanalpha = 1,
apar_soilm = 0,
bpar_soilm = 0.733,
c4 = FALSE,
method_jmaxlim = "wang17", #Other options are "smith19" or 'none' "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE,
returnvar = NULL,
verbose = FALSE
)
if (i==1) {
rp_model_output2<-as.data.frame(rp_model_output)
} else {
rp_model_output2[i,]<-as.data.frame(rp_model_output)
}
rp_model_output2$SITE[i]<-as.character(result[i,'SITE'])
}
result_no_soilm<-dplyr::left_join(result,rp_model_output2,by="SITE")
result_no_soilm$vcmax<-result_no_soilm$vcmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$vcmax25<-result_no_soilm$vcmax25 * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax<-result_no_soilm$jmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax25<-result_no_soilm$jmax25* 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$gpp<-result_no_soilm$gpp / 10^6 * 10000 * 365 #from g C m-2 day-1 to MgC per ha yr-1
result_no_soilm<-result_no_soilm%>%
mutate(vcmax=vcmax/fapar_no_cloud,
vcmax25 = vcmax25/fapar_no_cloud,
jmax = jmax/fapar_no_cloud,
jmax25 = jmax25/fapar_no_cloud,
iabs_no_fpar=iabs/fapar_no_cloud)%>%
dplyr::rename(iabs_with_fpar=iabs)
##openxlsx::write.xlsx(result_no_soilm,file= paste0('P_model_raw',Sys.Date(),'.xlsx'))
P_model_raw<-openxlsx::read.xlsx('P_model_raw2023-03-14.xlsx')
Sum_with_error <- function(x, na.rm=TRUE){
if (na.rm) x <- na.omit(x)
x2 <- x^2
sqrt(sum(x2))
}
J_to_mol = 4.6 # this will convert J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1
ANK_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/ANK_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
BOB_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/BOB_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
KOG_ppfd<-read.csv('H:/Oxford/Chapter_one/From_imma/Niko_s_daily_climate/KOG_daily_climate.csv') # It is w/m2 in this file for shortwave radiation
result$ppfd_field[result$SITE=='ANK'] <- mean(ANK_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5 #the 0.45 is photosynthetically active fraction (which is called PAR, see Wang et al Nature plants)
result$ppfd_field[result$SITE=='BOB'] <- mean(BOB_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field[result$SITE=='KOG'] <- mean(KOG_ppfd$Rad)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='ANK'] <- mean(ANK_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='BOB'] <- mean(BOB_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
result$ppfd_field_se[result$SITE=='KOG'] <- mean(KOG_ppfd$Rad_sd)*J_to_mol / 1000000 *3600*24 *0.5
cwm_table<-result
List_of_site<-c('KOG','BOB','ANK')
cls <- data.frame(SITE=List_of_site, colour=c("#deebf7","#9ecae1","#3182bd"))
cwm_table <- left_join(cwm_table, cls, by="SITE")
#cwm_table$standard_dev<-as.numeric(cwm_table$standard_dev)  #change variance into standard deviation
#cwm_table[,2]<-as.numeric(cwm_table[,2])
cwm_table$SITE <- factor(cwm_table$SITE, levels = c("ANK", "BOB", "KOG"))
# cwm_table$SITE <- str_replace(cwm_table$SITE, "ANK", "ANK (wet)")
# cwm_table$SITE <- str_replace(cwm_table$SITE, "BOB", "BOB (mid)")
# cwm_table$SITE <- str_replace(cwm_table$SITE, "KOG", "KOG (dry)")
ggplot(cwm_table) +
geom_bar( aes(x=SITE, y=ppfd_field), stat="identity", fill=cwm_table$colour, alpha=0.7,width = 0.8) +
geom_point(aes(x=SITE, y=ppfd),color='red', size=2)+
geom_errorbar(aes(x=SITE, y=ppfd_field, ymin=ppfd_field-ppfd_field_se, ymax=ppfd_field+ppfd_field_se),alpha=0.3, size=1.3,width=0.4)+ theme_bw()+
ylab("PPFD (mol/m2/d)")+
xlab("")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(cwm_table$ppfd_field,na.rm=T)*0.6,max(cwm_table$ppfd_field,na.rm=T)*1.2)) +
labs(title = "") +
theme(title = element_text(size=9),
plot.title = element_markdown())
ggsave(filename = "ppfd_data_model_compare.jpg",width = 1.74, height = 2.4, dpi = 300)
