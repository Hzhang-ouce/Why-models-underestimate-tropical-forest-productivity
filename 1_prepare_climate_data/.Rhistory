theme(title = element_text(size=9),
plot.title = element_markdown())
vcmax_figure<-ggplot(Field_measurement_based_GPP) +
geom_bar( aes(x=SITE, y=vcmax), stat="identity",data=Field_measurement_based_GPP, fill=Field_measurement_based_GPP$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=vcmax, ymin=vcmax-vcmax_se, ymax=vcmax+vcmax_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_based_GPP)+
geom_point(aes(x=SITE, y=vcmax),color='red', size=2.4,data = Field_measurement_based_GPP)+  ylab("vcmax (umol m-2 s-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(Field_measurement_based_GPP$vcmax,na.rm=T)*0,max(Field_measurement_based_GPP$vcmax,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
plot0<- ggarrange(GPP_figure, jmax_figure, vcmax_figure, ncol = 3, nrow = 1)+ggtitle('Calculate GPP with measured traits and measured climate')
annotate_figure(plot0, top = text_grob("Calculate GPP with measured traits and measured climate",
color = "black", face = "bold", size = 10))
# / (10^6 /24/3600)  this part change from  umol m-2 s-1 to mol C m-2 day-1  (the later one is the common unit in rpmodel)
# c_molmass is the mole mass of carbon
# / 10^6 * 10000 * 365 this part correct the unit of gpp from g C m-2 day-1 to MgC per ha yr-1
ggsave(filename = "H:/Oxford/Chapter_three/Figure_two_GPP_from_measured_Vcmax/Calculate GPP with measured traits and measured climate.jpg",width = 4.57, height = 2.7, dpi = 300)
ac_figure<-ggplot() +
geom_bar( aes(x=SITE, y=a_c ), stat="identity",data=Field_measurement_based_GPP, fill=Field_measurement_based_GPP$colour, alpha=0.7,width = 0.8) +
ylab("A_c (MgC ha yr-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(0,1.2)) +  theme(title = element_text(size=9),
plot.title = element_markdown())
aj_figure<-ggplot() +
geom_bar( aes(x=SITE, y=a_j ), stat="identity",data=Field_measurement_based_GPP, fill=Field_measurement_based_GPP$colour, alpha=0.7,width = 0.8) +
ylab("A_j (MgC ha yr-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(0,1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
plot02<- ggarrange(ac_figure, aj_figure, ncol = 3, nrow = 1)+ggtitle('Calculate GPP with measured traits and measured climate')
annotate_figure(plot02, top = text_grob("Calculate GPP with measured traits and measured climate AcAj",
color = "black", face = "bold", size = 10))
ggsave(filename = "H:/Oxford/Chapter_three/Figure_two_GPP_from_measured_Vcmax/Calculate GPP with measured traits and measured climate AcAj.jpg",width = 4.57, height = 2.7, dpi = 300)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ ggplot                  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##                                                                            --
##----------------------- model CLIMATE + model TRAIT---------------------------
##                                                                            --
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
load("H:/Oxford/Chapter_one/From_imma/climate_data/organized_climate_withppfd.rda")
result$VPDmean=result$VPDmean*1000
result$FAPAR=result$FAPAR/100
#result$ppfd=result$ppfd/30/24/3600*10^6#this unit conversion is wrong, we should do
result$ppfd=result$ppfd/30
result$grow_temp=c(26.53057,25.50788,27.09553) #These are temperature calculatd by 20200909_growth_temp_code.R
result$grow_temp=c(25.7,25,26.4) #These are temperature in Moore et al 2018
result$elv=c(235,114,229)
#result$patm=calc_patm (c(235,114,229))
#result$FAPAR=1 #In other to get leaf level Vcmax
setwd("H:/Oxford/Chapter_three/Rpmodel_V3")
files.sources = list.files(pattern ='*.R')
sapply(files.sources, source)
result<-result%>%
dplyr::rename(SITE=Group.1)%>%
arrange(factor(SITE, levels = c("ANK", "BOB", "KOG")))
for (i in 1:3){
temp_result<-result[i,]
rp_model_output<-rpmodel(
tc=temp_result$grow_temp,
vpd=temp_result$VPDmean,
co2=temp_result$co2,
fapar=temp_result$FAPAR,
ppfd=temp_result$ppfd,
patm = NA,
elv=temp_result$elv,
beta = 146,
soilm = 1,
meanalpha = 1,
apar_soilm = 0,
bpar_soilm = 0.733,
c4 = FALSE,
method_jmaxlim = "wang17", #Other options are "smith19" or 'none' "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE,
returnvar = NULL,
verbose = FALSE
)
if (i==1) {
rp_model_output2<-as.data.frame(rp_model_output)
} else {
rp_model_output2[i,]<-as.data.frame(rp_model_output)
}
rp_model_output2$SITE[i]<-as.character(result[i,'SITE'])
}
result_no_soilm<-dplyr::left_join(result,rp_model_output2,by="SITE")
result_no_soilm$vcmax<-result_no_soilm$vcmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$vcmax25<-result_no_soilm$vcmax25 * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax<-result_no_soilm$jmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax25<-result_no_soilm$jmax25* 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$gpp<-result_no_soilm$gpp / 10^6 * 10000 * 365 #from g C m-2 day-1 to MgC per ha yr-1
result_no_soilm<-result_no_soilm%>%
mutate(vcmax=vcmax/FAPAR,
vcmax25 = vcmax25/FAPAR,
jmax = jmax/FAPAR,
jmax25 = jmax25/FAPAR,
iabs_no_fpar=iabs/FAPAR)%>%
dplyr::rename(iabs_with_fpar=iabs)
List_of_site<-c('KOG','BOB','ANK')
cls <- data.frame(SITE=List_of_site, colour=c("#deebf7","#9ecae1","#3182bd"))
result_no_soilm <- left_join(result_no_soilm, cls, by="SITE")
result_no_soilm$SITE <- factor(result_no_soilm$SITE, levels = c("ANK", "BOB", "KOG"))
result_no_soilm$SITE <- str_replace(result_no_soilm$SITE, "ANK", "ANK (wet)")
result_no_soilm$SITE <- str_replace(result_no_soilm$SITE, "BOB", "BOB (mid)")
result_no_soilm$SITE <- str_replace(result_no_soilm$SITE, "KOG", "KOG (dry)")
GPP_figure<-ggplot() +
geom_bar( aes(x=SITE, y=gpp), stat="identity",data=Field_measurement_table, fill=result_no_soilm$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=gpp, ymin=gpp-gpp_se, ymax=gpp+gpp_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_table)+
geom_point(aes(x=SITE, y=gpp),color='red', size=2,data = result_no_soilm)+
ylab("GPP (MgC ha yr-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(result_no_soilm$gpp,na.rm=T)*0,max(Field_measurement_table$gpp,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
jmax_figure<-ggplot(result_no_soilm) +
geom_bar( aes(x=SITE, y=jmax), stat="identity",data=Field_measurement_table, fill=result_no_soilm$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=jmax, ymin=jmax-jmax_se, ymax=jmax+jmax_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_table)+
geom_point(aes(x=SITE, y=jmax),color='red', size=2,data = result_no_soilm)+  ylab("jmax (umol m-2 s-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(Field_measurement_table$jmax,na.rm=T)*0,max(Field_measurement_table$jmax,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
vcmax_figure<-ggplot(result_no_soilm) +
geom_bar( aes(x=SITE, y=vcmax), stat="identity",data=Field_measurement_table, fill=result_no_soilm$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=vcmax, ymin=vcmax-vcmax_se, ymax=vcmax+vcmax_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_table)+
geom_point(aes(x=SITE, y=vcmax),color='red', size=2,data = result_no_soilm)+  ylab("vcmax (umol m-2 s-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(Field_measurement_table$vcmax,na.rm=T)*0,max(Field_measurement_table$vcmax,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
plot1<- ggarrange(GPP_figure, jmax_figure, vcmax_figure, ncol = 3, nrow = 1)+ggtitle('Model traits from satellite climate, then calculate GPP')
annotate_figure(plot1, top = text_grob("Model traits from satellite climate, then calculate GPP",
color = "black", face = "bold", size = 10))
ggsave(filename = "H:/Oxford/Chapter_three/Figure_two_GPP_from_measured_Vcmax/Model traits from satellite climate then calculate GPP.jpg",width = 4.57, height = 2.7, dpi = 300)
for (i in 1:3){
temp_result<-Field_measurement_table[i,]
rp_model_output<-rpmodel(
tc=temp_result$tc,
vpd=temp_result$VPDmean,
co2=temp_result$co2,
fapar=temp_result$FAPAR_field,
ppfd=temp_result$ppfd_field ,
patm = NA,
elv=temp_result$elv,
beta = 146,
soilm = 1,
meanalpha = 1,
apar_soilm = 0,
bpar_soilm = 0.733,
c4 = FALSE,
method_jmaxlim = "wang17", #Other options are "smith19" or 'none' "wang17",
do_ftemp_kphio = TRUE,
do_soilmstress = FALSE,
returnvar = NULL,
verbose = FALSE
)
if (i==1) {
rp_model_output2<-as.data.frame(rp_model_output)
} else {
rp_model_output2[i,]<-as.data.frame(rp_model_output)
}
rp_model_output2$SITE[i]<-as.character(result[i,'SITE'])
}
result$FAPAR_field<-Field_measurement_table$FAPAR_field
result_no_soilm<-dplyr::left_join(result,rp_model_output2,by="SITE")
result_no_soilm$vcmax<-result_no_soilm$vcmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$vcmax25<-result_no_soilm$vcmax25 * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax<-result_no_soilm$jmax * 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$jmax25<-result_no_soilm$jmax25* 10^6 /24/3600 #from mol C m-2 day-1 to umol m-2 s-1
result_no_soilm$gpp<-result_no_soilm$gpp / 10^6 * 10000 * 365 #from g C m-2 day-1 to MgC per ha yr-1
result_no_soilm<-result_no_soilm%>%
mutate(vcmax=vcmax/FAPAR_field,
vcmax25 = vcmax25/FAPAR_field,
jmax = jmax/FAPAR_field,
jmax25 = jmax25/FAPAR_field,
iabs_no_fpar=iabs/FAPAR_field)%>%
dplyr::rename(iabs_with_fpar=iabs)
List_of_site<-c('KOG','BOB','ANK')
cls <- data.frame(SITE=List_of_site, colour=c("#deebf7","#9ecae1","#3182bd"))
result_no_soilm <- left_join(result_no_soilm, cls, by="SITE")
result_no_soilm$SITE <- factor(result_no_soilm$SITE, levels = c("ANK", "BOB", "KOG"))
result_no_soilm$SITE <- str_replace(result_no_soilm$SITE, "ANK", "ANK (wet)")
result_no_soilm$SITE <- str_replace(result_no_soilm$SITE, "BOB", "BOB (mid)")
result_no_soilm$SITE <- str_replace(result_no_soilm$SITE, "KOG", "KOG (dry)")
GPP_figure<-ggplot() +
geom_bar( aes(x=SITE, y=gpp), stat="identity",data=Field_measurement_table, fill=result_no_soilm$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=gpp, ymin=gpp-gpp_se, ymax=gpp+gpp_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_table)+
geom_point(aes(x=SITE, y=gpp),color='red', size=2,data = result_no_soilm)+
ylab("GPP (MgC ha yr-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(result_no_soilm$gpp,na.rm=T)*0,max(Field_measurement_table$gpp,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
GPP_figure
jmax_figure<-ggplot(result_no_soilm) +
geom_bar( aes(x=SITE, y=jmax), stat="identity",data=Field_measurement_table, fill=result_no_soilm$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=jmax, ymin=jmax-jmax_se, ymax=jmax+jmax_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_table)+
geom_point(aes(x=SITE, y=jmax),color='red', size=2,data = result_no_soilm)+  ylab("jmax (umol m-2 s-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(Field_measurement_table$jmax,na.rm=T)*0,max(Field_measurement_table$jmax,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
jmax_figure
vcmax_figure<-ggplot(result_no_soilm) +
geom_bar( aes(x=SITE, y=vcmax), stat="identity",data=Field_measurement_table, fill=result_no_soilm$colour, alpha=0.7,width = 0.8) +
geom_errorbar(aes(x=SITE, y=vcmax, ymin=vcmax-vcmax_se, ymax=vcmax+vcmax_se),alpha=0.3, size=1.3,width=0.4,data=Field_measurement_table)+
geom_point(aes(x=SITE, y=vcmax),color='red', size=2,data = result_no_soilm)+  ylab("vcmax (umol m-2 s-1)")+
xlab("")+ theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
coord_cartesian( ylim = c(min(Field_measurement_table$vcmax,na.rm=T)*0,max(Field_measurement_table$vcmax,na.rm=T)*1.2)) +
theme(title = element_text(size=9),
plot.title = element_markdown())
vcmax_figure
plot2<- ggarrange(GPP_figure, jmax_figure, vcmax_figure, ncol = 3, nrow = 1)+ggtitle('Model traits from measured climate, then calculate GPP')
annotate_figure(plot2, top = text_grob("Model traits from measured climate, then calculate GPP",
color = "black", face = "bold", size = 10))
ggsave(filename = "H:/Oxford/Chapter_three/Figure_two_GPP_from_measured_Vcmax/Model traits from measured climate, then calculate GPP.jpg",width = 4.57, height = 2.7, dpi = 300)
library(tidyverse)
# so xiongjie helps to download fapar from MODIS using GEE, now I just need to plot it with R
setwd('H:\\Oxford\\Chapter_three\\Figure_three_timeseries_of_fapar')
Raw_csv<-read_csv('Plot Points Data  from GEE Xiongjie.csv')
std.error <- function(x) sd(x)/sqrt(length(x))
Processed_csv<-Raw_csv%>%
rowwise()%>%
mutate( FparQC_binary=paste(rev(as.integer(intToBits(FparLai_QC))), collapse=""),
# convert to binary
FparQC_binary = stringi::stri_sub(FparQC_binary,-8,-1),
# only last 8 digits are meaningful, remove other 0 at the start of the string
CLOUDSTATE = as.numeric(substr(FparQC_binary,4,5)),
# extract cloud state, 00 denote no cloud
month = substr(date,6,7),
# extract month from the 6th and 7th digits
site = substr(name,1,3))%>%
# extract site from the 1st to 3rd digits
group_by(month, site)%>%
mutate(number_measured = n(),
#number of measurements under a month and plot
number_no_cloud = sum(CLOUDSTATE==0,na.rm=T),
# number of no clound measurements
percentage_of_no_clound = number_no_cloud/number_measured)%>%
group_by(month, site)%>%
summarise(Fpar_500m_mean = mean(Fpar_500m, na.rm=T),
Fpar_500m_se = std.error(Fpar_500m),
percentage_of_no_clound=mean(percentage_of_no_clound))
# Plot the result
library(ggplot2)
Processed_csv%>%
mutate(month = as.numeric(month))%>%
ggplot() +
geom_line(aes(x = month, y = Fpar_500m_mean)) +
geom_point(aes(x = month, y = Fpar_500m_mean)) +
geom_rect(aes(xmin = month - 0.5, xmax = month + 0.5, ymin = 0, ymax = 80, fill = percentage_of_no_clound), alpha = 0.5) +
facet_wrap(~site, nrow = 3, ncol = 1) +
scale_x_continuous(breaks = seq(1, 12, 1), labels = c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "Octobe", "November", "December")) +
ylab("FAPAR mean (%)") +
scale_fill_continuous(name = "Percentage of \nno cloud data") +
theme_bw() +
theme(panel.grid = element_blank())
Processed_csv%>%
mutate(month = as.numeric(month))%>%
ggplot() +
geom_line(aes(x = month, y = Fpar_500m_mean)) +
geom_point(aes(x = month, y = Fpar_500m_mean)) +
geom_rect(aes(xmin = month - 0.5, xmax = month + 0.5, ymin = 0, ymax = 80, fill = 1-percentage_of_no_clound), alpha = 0.5) +
facet_wrap(~site, nrow = 3, ncol = 1) +
scale_x_continuous(breaks = seq(1, 12, 1), labels = c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "Octobe", "November", "December")) +
ylab("FAPAR mean (%)") +
scale_fill_continuous(name = "Percentage of \n data with cloud") +
theme_bw() +
theme(panel.grid = element_blank())
Processed_csv%>%
mutate(month = as.numeric(month))%>%
ggplot() +
geom_line(aes(x = month, y = Fpar_500m_mean)) +
geom_point(aes(x = month, y = Fpar_500m_mean)) +
geom_rect(aes(xmin = month - 0.5, xmax = month + 0.5, ymin = 0, ymax = 80, fill = 1-percentage_of_no_clound), alpha = 0.5) +
facet_wrap(~site, nrow = 3, ncol = 1) +
scale_x_continuous(breaks = seq(1, 12, 1), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) +
ylab("FAPAR mean (%)") +
scale_fill_continuous(name = "Percentage of \n data with cloud") +
theme_bw() +
theme(panel.grid = element_blank())
ggsave(filename = 'Fapar_time_series_Ghana_20221025.jpg',width= , height= )
pizzass<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/ANK_gapfill_erai_monthly_1979_2017.csv")
new_pizza1<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizzass<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/BOB_gapfill_erai_monthly_1979_2017.csv")
new_pizza2<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
new_pizza2$SWmean<-NaN
pizzass<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/KOG_gapfill_erai_monthly_1979_2017.csv")
new_pizza3<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizza<-rbind(new_pizza2,new_pizza1,new_pizza3)
temperature_table_erai<-aggregate(pizza[, 3:6], list(pizza$site), mean)%>%dplyr::select(Tmean)
library(tidyverse)
pizza<-rbind(new_pizza2,new_pizza1,new_pizza3)
temperature_table_erai<-aggregate(pizza[, 3:6], list(pizza$site), mean)%>%dplyr::select(Tmean)
temperature_table_erai
pizza
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
# firstly, we load wedfi watch data, a big nc file, average them (2006-2015) into one map
setwd('H:/Oxford/Chapter_one/From_imma/climate_data')
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
# firstly, we load wedfi watch data, a big nc file, average them (2006-2015) into one map
setwd('H:/Oxford/Chapter_one/From_imma/climate_data')
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
##--------
##  ppfd
##--------
library(ncdf4)
library(elevatr)
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
View(ncin)
###########################################################################
###########################################################################
###                                                                     ###
###                            Huanyuan Zhang                           ###
###                      Thu Feb 27 17:36:16 2020                       ###
###   This document is for organizing the climate data shared by Imma   ###
###                                                                     ###
###########################################################################
###########################################################################
setwd('H:/Oxford/Chapter_three/github_version/1_prepare_climate_data')
library(tidyverse)
library(rpmodel)
##------------------------------------------------
##  lets try climate data prepared by Imma first
##------------------------------------------------
pizzass<-read.csv("ANK_gapfill_erai_monthly_1979_2017.csv")
new_pizza1<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizzass<-read.csv("BOB_gapfill_erai_monthly_1979_2017.csv")
new_pizza2<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
new_pizza2$SWmean<-NaN
pizzass<-read.csv("KOG_gapfill_erai_monthly_1979_2017.csv")
new_pizza3<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizza<-rbind(new_pizza2,new_pizza1,new_pizza3)
result<-aggregate(pizza[, 3:6], list(pizza$site), mean)
##-----------
##  lat lon CO2
##-----------
result$Latitude=c(6.6910,5.2680,7.2616)
result$Longitude=c(-1.3389,-2.6955,-1.1501) #From Moore 2017
result$co2=391 #from Trendy
result$elv=c(235,114,229)
##--------
##  ppfd
##--------
library(ncdf4)
library(elevatr)
# firstly, we load wedfi watch data, a big nc file, average them (2006-2015) into one map
setwd('H:/Oxford/Chapter_one/From_imma/climate_data')
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
ppfd_map <- ncvar_get(ncin,"ppfd")
ppfd_map<-apply(ppfd_map[,,277:420], c(1,2), mean,na.rm=T)##----------------------
rotate_it <- function(x) t(apply(x, 2, rev)) #self-defined function for rotating matrix
ppfd_map<-raster(rotate_it(ppfd_map))
ppfd_map<-flip(ppfd_map,1)
extent(ppfd_map) <- extent(-180, 180, -90, 90) #adjust its extent
crs(ppfd_map) <-Ghana_map@crs@projargs
e <- extent(-4, 0, 4, 9)
Ghana_map <- crop(ppfd_map, e)
plot(Ghana_map)
Ghana_pointlist<-data.frame(rasterToPoints(Ghana_map))
library(raster)
# firstly, we load wedfi watch data, a big nc file, average them (2006-2015) into one map
setwd('H:/Oxford/Chapter_one/From_imma/climate_data')
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
ppfd_map <- ncvar_get(ncin,"ppfd")
ppfd_map<-apply(ppfd_map[,,277:420], c(1,2), mean,na.rm=T)##----------------------
rotate_it <- function(x) t(apply(x, 2, rev)) #self-defined function for rotating matrix
ppfd_map<-raster(rotate_it(ppfd_map))
ppfd_map<-flip(ppfd_map,1)
extent(ppfd_map) <- extent(-180, 180, -90, 90) #adjust its extent
crs(ppfd_map) <-Ghana_map@crs@projargs
e <- extent(-4, 0, 4, 9)
crs(ppfd_map)
crs(ppfd_map) <-'+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0'
e <- extent(-4, 0, 4, 9)
Ghana_map <- crop(ppfd_map, e)
crs(ppfd_map)
crs(ppfd_map) <-'+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0'
e <- extent(-4, 0, 4, 9)
Ghana_map <- crop(ppfd_map, e)
plot(Ghana_map)
Ghana_pointlist<-data.frame(rasterToPoints(Ghana_map))
prj_dd <-Ghana_map@crs@projargs
df_elev_epqs <- get_elev_point(Ghana_pointlist, prj = prj_dd,src = "aws")
Final_elevation<-data.frame(df_elev_epqs)
Final_elevation$elev_units<- NULL
Final_elevation$optional<- NULL
Final_elevation<-Final_elevation[,c("elevation","x","y","layer")]
Final_elevation<-Final_elevation[complete.cases(Final_elevation), ]
names(Final_elevation) <- c("z","lon","lat","fapar")
coordinates(Final_elevation) <- c("lon", "lat")
crs(Final_elevation)<-Ghana_map@crs@projargs
site2<-result[,c("Longitude","Latitude","elv")]
names(site2) <- c("lon","lat","z")
coordinates(site2) <- c("lon", "lat")
crs(site2)<-Ghana_map@crs@projargs
x <- (gwr(fapar ~ z, Final_elevation, bandwidth = 1.06, fit.points = site2,predictions=TRUE))
site2<-result[,c("Longitude","Latitude","elv")]
centroid_spdf <- SpatialPointsDataFrame(
site2[,1:2], proj4string=Ghana_map@crs, site2)
cent_max <- raster::extract(ppfd_map,             # raster layer
centroid_spdf,   # SPDF with centroids for buffer
buffer = 1,     # buffer size, units depend on CRS
fun=mean,         # what to value to extract
df=TRUE)         # return a dataframe?
result$ppfd<-cent_max$layer
result
result$ppfd/30
ANK_ppfd_CHIRPS<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/GhanaSites_TerraClimate_CHIRPS.csv")%>%
filter(year>2010 & year<2017)%>%
group_by(site)%>%
summarise(SW_mean=mean(sw)/ 1000000 *3600*24 *0.45*J_to_mol) # unit conversion from w/m2 to mol/m2/day
ANK_ppfd_CHIRPS<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/GhanaSites_TerraClimate_CHIRPS.csv")%>%
filter(year>2010 & year<2017)%>%
group_by(site)%>%
summarise(SW_mean=mean(sw)/ 1000000 *3600*24 *0.45*J_to_mol) # unit conversion from w/m2 to mol/m2/day
J_to_mol = 4.6 # this will convert J m-2 s-1 (= W m-2) to umol (quanta) m-2 s-1
ANK_ppfd_CHIRPS<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/GhanaSites_TerraClimate_CHIRPS.csv")%>%
filter(year>2010 & year<2017)%>%
group_by(site)%>%
summarise(SW_mean=mean(sw)/ 1000000 *3600*24 *0.45*J_to_mol) # unit conversion from w/m2 to mol/m2/day
ANK_ppfd_CHIRPS
20000000/ 1000000*0.45*J_to_mol/30
20000000/24/3600/ 1000000 *3600*24 *0.45*J_to_mol
20000000/3600/ 1000000 *3600*24 *0.45*J_to_mol
ANK_ppfd_CHIRPS<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/GhanaSites_TerraClimate_CHIRPS.csv")%>%
filter(year>2010 & year<2017)%>%
group_by(site)%>%
summarise(SW_mean=mean(sw)/ 1000000 *3600*24 *0.45*J_to_mol) # unit conversion from w/m2 to mol/m2/day
ANK_ppfd_CHIRPS
result$ppfd<-cent_max$layer
result
##--------
##  ppfd
##--------
library(ncdf4)
library(elevatr)
library(raster)
# firstly, we load wedfi watch data, a big nc file, average them (2006-2015) into one map
setwd('H:/Oxford/Chapter_one/From_imma/climate_data')
#load("organized_climate.rda")
ncin <- nc_open("1982_2016.ppfd.nc") # The unit is mol/m2/month
ppfd_map <- ncvar_get(ncin,"ppfd")
ppfd_map<-apply(ppfd_map[,,277:420], c(1,2), mean,na.rm=T)##----------------------
rotate_it <- function(x) t(apply(x, 2, rev)) #self-defined function for rotating matrix
ppfd_map<-raster(rotate_it(ppfd_map))
ppfd_map<-flip(ppfd_map,1)
extent(ppfd_map) <- extent(-180, 180, -90, 90) #adjust its extent
crs(ppfd_map) <-'+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0'
e <- extent(-4, 0, 4, 9)
Ghana_map <- crop(ppfd_map, e)
plot(Ghana_map)
Ghana_pointlist<-data.frame(rasterToPoints(Ghana_map))
prj_dd <-Ghana_map@crs@projargs
site2<-result[,c("Longitude","Latitude","elv")]
centroid_spdf <- SpatialPointsDataFrame(
site2[,1:2], proj4string=Ghana_map@crs, site2)
cent_max <- raster::extract(ppfd_map,             # raster layer
centroid_spdf,   # SPDF with centroids for buffer
buffer = 1,     # buffer size, units depend on CRS
fun=mean,         # what to value to extract
df=TRUE)         # return a dataframe?
result$ppfd<-cent_max$layer
save(result,file = "organized_climate_withppfd.rda")
setwd("F:/Oxford/Chapter_one/Rpmodel_V2")
###########################################################################
###########################################################################
###                                                                     ###
###                            Huanyuan Zhang                           ###
###                      Thu Feb 27 17:36:16 2020                       ###
###   This document is for organizing the climate data shared by Imma   ###
###                                                                     ###
###########################################################################
###########################################################################
setwd('H:/Oxford/Chapter_three/github_version/1_prepare_climate_data')
save(result,file = "organized_climate_withppfd.rda")
result
Field_measurement_table<-openxlsx::read.xlsx('H:/Oxford/Chapter_three/Supplementary_compare_Pmodel_with_measurement/Field_measurement_photosynthesis_trait.xlsx' )
Field_measurement_table
pizzass<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/ANK_gapfill_erai_monthly_1979_2017.csv")
new_pizza1<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizzass<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/BOB_gapfill_erai_monthly_1979_2017.csv")
new_pizza2<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
new_pizza2$SWmean<-NaN
pizzass<-read.csv("H:/Oxford/Chapter_one/From_imma/climate_data/KOG_gapfill_erai_monthly_1979_2017.csv")
new_pizza3<-pizzass[which(pizzass$year<2017 & pizzass$year>2010),]
pizza<-rbind(new_pizza2,new_pizza1,new_pizza3)
temperature_table_erai<-aggregate(pizza[, 3:6], list(pizza$site), mean)%>%dplyr::select(Tmean)
Field_measurement_table$Tmean<-temperature_table_erai$Tmean
Field_measurement_table
load("H:/Oxford/Chapter_three/github_version/1_prepare_climate_data/organized_climate_withppfd.rda")
load("H:/Oxford/Chapter_three/github_version/2_Figure_four_timeseries_of_fapar/organized_climate_withppfd_two_fapar.rda")
