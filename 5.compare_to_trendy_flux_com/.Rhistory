theme(legend.position="none",plot.title = element_text(size = 10))+ylim(0,47)
temp_table<-temp_table%>%
filter(model!='Pmodel_null') # we need to remove Pmodel_null from stacked bar plot
stack_percetnage_plot<-ghana_fGPP[2,]%>%
dplyr::rename(GPP_MgC_ha_year=GPP)%>%
mutate(model='in-situ')%>%
plyr::rbind.fill(temp_table)%>%
filter(model!='TRENDY_mean')%>%
mutate(name='BOB')%>%
arrange(desc(GPP_MgC_ha_year))%>%
mutate(model=factor(model, levels = Order_of_model))
stack_percetnage_plot$percentage[1]<-(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[2])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[2]<-(stack_percetnage_plot$GPP_MgC_ha_year[2]-stack_percetnage_plot$GPP_MgC_ha_year[3])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[3]<-(stack_percetnage_plot$GPP_MgC_ha_year[3]-stack_percetnage_plot$GPP_MgC_ha_year[4])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[4]<-(stack_percetnage_plot$GPP_MgC_ha_year[4]-stack_percetnage_plot$GPP_MgC_ha_year[5])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
stack_percetnage_plot$percentage<-percent(stack_percetnage_plot$percentage,digits=0)
stack_percetnage_plot$percentage[5]<-''
stack_figure <- ggplot(stack_percetnage_plot) +
geom_bar(aes(x=' ', y=GPP_MgC_ha_year, fill = model),stat="identity",position = "identity") +
#   geom_text(aes(x=name,y=GPP_MgC_ha_year-3,label=percentage),size = 3, stat="identity",position = "identity")+
scale_fill_manual(values=c("#e78ac3","#7fc97f", "#386cb0" ,"#fdc086", "#FFFFFF"),
name="Data-model discrepency \nresolved by",
labels=c("unresolved discrepency","field trait" ,"field fapar", "optimality trait", " "))+
theme_bw()+
ylab('')+xlab('Diff')+
theme(legend.position="none")+ylim(0,47)
my_filnal_output<-egg::ggarrange(BOB,stack_figure,ncol=2, widths = c(10,1))
library(tidyverse)
library(raster)
library(ggplot2)
library(ggpubr)
setwd('H:/Oxford/Chapter_three/github_version/5.compare_to_trendy_flux_com/')
dump_table_trendy<-openxlsx::read.xlsx('Extract_GEM_from_Trendy_fluxcom.xlsx')%>%
filter(model!='FLUXCOM')%>%
group_by(name)%>%
summarise( GPP_MgC_ha_year_sd = sd(GPP_MgC_ha_year,na.rm=T),
GPP_MgC_ha_year=mean(GPP_MgC_ha_year,na.rm=T))%>%
mutate(model = 'TRENDY_mean')
# Read in field Ghana data and calculate GPP
ghana_fGPP <- read.csv('H:/Oxford/Chapter_two/wirting_up/Ghana_aridity_transect_Carbon_cycle_/input_data/all_GPP_together_per_SITE_20221122.csv')%>%
dplyr::select(GPP,GPP_se)
# Read in MODIS GPP (Xiongjie downloaded this for me with GEE)
Modis_GPP <- read.csv('GPP_from_MODIS_GPP_Amazonia.csv')%>%
dplyr::select(Gpp,name,date,Psn_QC)%>%
filter(Gpp>0)%>% #REMOVE bad data
mutate(SITE = substr(name,1,3))%>%
rowwise()%>%
mutate( FparQC_binary=paste(rev(as.integer(intToBits(Psn_QC))), collapse=""),
# convert to binary
FparQC_binary = stringi::stri_sub(FparQC_binary,-8,-1),
# only last 8 digits are meaningful, remove other 0 at the start of the string
CLOUDSTATE = as.numeric(substr(FparQC_binary,4,5)))%>%
filter(CLOUDSTATE=='0' | CLOUDSTATE=='10')%>%
group_by(SITE)%>%
summarise(GPP=mean(Gpp) /8 *365 /1000/10000*10000)%>% # 20 years average, from kgc/m2/8day to MgC/ha/year, the *1000 is because MODIS gpp was recorded with 1000 scale to save disk space (see modis document)
dplyr::rename(name=SITE, GPP_MgC_ha_year=GPP)%>%
mutate(model = 'MODIS')
# Trait-based_GPP, P-model informed by Vcmax and Jmax field measured
Field_measurement_based_GPP<-openxlsx::read.xlsx( '../4.Figure_two_GPP_from_measured_Vcmax/2023-03-15_plug_in_vcmax_jmax_and_get_Pmodel_output.xlsx')%>%
dplyr::select(SITE,gpp_calculated)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_PfL')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp_calculated )
Pmodel_S<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment_Pmodel_PPFD.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_P')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
Pmodel_F<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment P_model_fAPAR.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_Pf')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
dump_table3<-plyr::rbind.fill(Modis_GPP,Field_measurement_based_GPP,Pmodel_F,Pmodel_S,Pmodel_online)
Order_of_model <- c('in-situ','TRENDY_mean','CLASSIC','IBIS','LPJ','ORCHIDEE','VISIT','ISBA-CTRIP', # these are non- N coupled models
'CLM5.0',
'DLEM',
'ISAM',
'JSBACH',
'JULES',
'LPJ-GUESS',
'LPX-Bern',
'OCN',
'ORCHIDEE-CNP',
'ORCHIDEEv3',
'SDGVM',
'FLUXCOM','Pmodel_PfL','Pmodel_Pf','Pmodel_P','MODIS')
cls <- data.frame(model=Order_of_model, colour=c(rep('C only',8),rep('CN models',11),'FLUXCOM',rep('P-models',3),'MODIS'))
pattern = c(rep('none',17),'stripe','crosshatch')
temp_table<-dump_table3%>%
filter(name=='ANK')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
temp_table<-dump_table3%>%
filter(name=='BOB')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
BOB<-temp_table%>%
ggplot( ) +
geom_bar(stat="identity", aes(x=model, y=GPP_MgC_ha_year,fill=model),colour='black', alpha=.6, width=.4,size=0.2) + #models bar plot
xlab("Experiments") +
ylab("GPP (MgC/ha/yr)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=0.95,vjust=0.2)) +
geom_rect(data=ghana_fGPP[2,], inherit.aes=FALSE, aes(xmin=-Inf, xmax=Inf, ymin=min(GPP-GPP_se),
ymax=max(GPP+GPP_se)), color="transparent", fill="grey", alpha=0.3)+ # Field in situ measurements
geom_hline(yintercept=as.numeric(ghana_fGPP$GPP[2]), linetype='solid', col = '#e78ac3',size=1)+  # in-situ measurements
annotate("text", x = temp_table$model[1], y = ghana_fGPP$GPP[2]+2, label = "In-situ GPP", hjust = "inward",size=3.5)+
scale_fill_manual(values=c(  "#7fc97f" ,"#386cb0", "#fdc086",'#ffff99'),
name="Data sources")+
ggtitle('Site: BOB')+
theme(legend.position="none",plot.title = element_text(size = 10))+ylim(0,47)
stack_percetnage_plot<-ghana_fGPP[2,]%>%
dplyr::rename(GPP_MgC_ha_year=GPP)%>%
mutate(model='in-situ')%>%
plyr::rbind.fill(temp_table)%>%
filter(model!='TRENDY_mean')%>%
mutate(name='BOB')%>%
arrange(desc(GPP_MgC_ha_year))%>%
mutate(model=factor(model, levels = Order_of_model))
stack_percetnage_plot$percentage[1]<-(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[2])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[2]<-(stack_percetnage_plot$GPP_MgC_ha_year[2]-stack_percetnage_plot$GPP_MgC_ha_year[3])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[3]<-(stack_percetnage_plot$GPP_MgC_ha_year[3]-stack_percetnage_plot$GPP_MgC_ha_year[4])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[4]<-(stack_percetnage_plot$GPP_MgC_ha_year[4]-stack_percetnage_plot$GPP_MgC_ha_year[5])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
stack_percetnage_plot$percentage<-percent(stack_percetnage_plot$percentage,digits=0)
stack_percetnage_plot$percentage[5]<-''
stack_figure <- ggplot(stack_percetnage_plot) +
geom_bar(aes(x=' ', y=GPP_MgC_ha_year, fill = model),stat="identity",position = "identity") +
#   geom_text(aes(x=name,y=GPP_MgC_ha_year-3,label=percentage),size = 3, stat="identity",position = "identity")+
scale_fill_manual(values=c("#e78ac3","#7fc97f", "#386cb0" ,"#fdc086", "#ffff99"),
name="Data-model discrepency \nresolved by",
labels=c("unresolved discrepency","field trait" ,"field fapar", "optimality trait", " "))+
theme_bw()+
ylab('')+xlab('Diff')+
theme(legend.position="none")+ylim(0,47)
my_filnal_output<-egg::ggarrange(BOB,stack_figure,ncol=2, widths = c(10,1))
library(tidyverse)
library(raster)
library(ggplot2)
library(ggpubr)
setwd('H:/Oxford/Chapter_three/github_version/5.compare_to_trendy_flux_com/')
dump_table_trendy<-openxlsx::read.xlsx('Extract_GEM_from_Trendy_fluxcom.xlsx')%>%
filter(model!='FLUXCOM')%>%
group_by(name)%>%
summarise( GPP_MgC_ha_year_sd = sd(GPP_MgC_ha_year,na.rm=T),
GPP_MgC_ha_year=mean(GPP_MgC_ha_year,na.rm=T))%>%
mutate(model = 'TRENDY_mean')
# Read in field Ghana data and calculate GPP
ghana_fGPP <- read.csv('H:/Oxford/Chapter_two/wirting_up/Ghana_aridity_transect_Carbon_cycle_/input_data/all_GPP_together_per_SITE_20221122.csv')%>%
dplyr::select(GPP,GPP_se)
# Read in MODIS GPP (Xiongjie downloaded this for me with GEE)
Modis_GPP <- read.csv('GPP_from_MODIS_GPP_Amazonia.csv')%>%
dplyr::select(Gpp,name,date,Psn_QC)%>%
filter(Gpp>0)%>% #REMOVE bad data
mutate(SITE = substr(name,1,3))%>%
rowwise()%>%
mutate( FparQC_binary=paste(rev(as.integer(intToBits(Psn_QC))), collapse=""),
# convert to binary
FparQC_binary = stringi::stri_sub(FparQC_binary,-8,-1),
# only last 8 digits are meaningful, remove other 0 at the start of the string
CLOUDSTATE = as.numeric(substr(FparQC_binary,4,5)))%>%
filter(CLOUDSTATE=='0' | CLOUDSTATE=='10')%>%
group_by(SITE)%>%
summarise(GPP=mean(Gpp) /8 *365 /1000/10000*10000)%>% # 20 years average, from kgc/m2/8day to MgC/ha/year, the *1000 is because MODIS gpp was recorded with 1000 scale to save disk space (see modis document)
dplyr::rename(name=SITE, GPP_MgC_ha_year=GPP)%>%
mutate(model = 'MODIS')
# Trait-based_GPP, P-model informed by Vcmax and Jmax field measured
Field_measurement_based_GPP<-openxlsx::read.xlsx( '../4.Figure_two_GPP_from_measured_Vcmax/2023-03-15_plug_in_vcmax_jmax_and_get_Pmodel_output.xlsx')%>%
dplyr::select(SITE,gpp_calculated)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_PfL')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp_calculated )
Pmodel_S<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment_Pmodel_PPFD.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_P')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
Pmodel_F<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment P_model_fAPAR.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_Pf')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
dump_table3<-plyr::rbind.fill(Modis_GPP,Field_measurement_based_GPP,Pmodel_F,Pmodel_S,Pmodel_online)
Order_of_model <- c('in-situ','TRENDY_mean','CLASSIC','IBIS','LPJ','ORCHIDEE','VISIT','ISBA-CTRIP', # these are non- N coupled models
'CLM5.0',
'DLEM',
'ISAM',
'JSBACH',
'JULES',
'LPJ-GUESS',
'LPX-Bern',
'OCN',
'ORCHIDEE-CNP',
'ORCHIDEEv3',
'SDGVM',
'FLUXCOM','Pmodel_PfL','Pmodel_Pf','Pmodel_P','MODIS')
cls <- data.frame(model=Order_of_model, colour=c(rep('C only',8),rep('CN models',11),'FLUXCOM',rep('P-models',3),'MODIS'))
pattern = c(rep('none',17),'stripe','crosshatch')
temp_table<-dump_table3%>%
filter(name=='BOB')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
temp_table
rm(dump_table3)
library(tidyverse)
library(raster)
library(ggplot2)
library(ggpubr)
setwd('H:/Oxford/Chapter_three/github_version/5.compare_to_trendy_flux_com/')
dump_table_trendy<-openxlsx::read.xlsx('Extract_GEM_from_Trendy_fluxcom.xlsx')%>%
filter(model!='FLUXCOM')%>%
group_by(name)%>%
summarise( GPP_MgC_ha_year_sd = sd(GPP_MgC_ha_year,na.rm=T),
GPP_MgC_ha_year=mean(GPP_MgC_ha_year,na.rm=T))%>%
mutate(model = 'TRENDY_mean')
# Read in field Ghana data and calculate GPP
ghana_fGPP <- read.csv('H:/Oxford/Chapter_two/wirting_up/Ghana_aridity_transect_Carbon_cycle_/input_data/all_GPP_together_per_SITE_20221122.csv')%>%
dplyr::select(GPP,GPP_se)
# Read in MODIS GPP (Xiongjie downloaded this for me with GEE)
Modis_GPP <- read.csv('GPP_from_MODIS_GPP_Amazonia.csv')%>%
dplyr::select(Gpp,name,date,Psn_QC)%>%
filter(Gpp>0)%>% #REMOVE bad data
mutate(SITE = substr(name,1,3))%>%
rowwise()%>%
mutate( FparQC_binary=paste(rev(as.integer(intToBits(Psn_QC))), collapse=""),
# convert to binary
FparQC_binary = stringi::stri_sub(FparQC_binary,-8,-1),
# only last 8 digits are meaningful, remove other 0 at the start of the string
CLOUDSTATE = as.numeric(substr(FparQC_binary,4,5)))%>%
filter(CLOUDSTATE=='0' | CLOUDSTATE=='10')%>%
group_by(SITE)%>%
summarise(GPP=mean(Gpp) /8 *365 /1000/10000*10000)%>% # 20 years average, from kgc/m2/8day to MgC/ha/year, the *1000 is because MODIS gpp was recorded with 1000 scale to save disk space (see modis document)
dplyr::rename(name=SITE, GPP_MgC_ha_year=GPP)%>%
mutate(model = 'MODIS')
# Trait-based_GPP, P-model informed by Vcmax and Jmax field measured
Field_measurement_based_GPP<-openxlsx::read.xlsx( '../4.Figure_two_GPP_from_measured_Vcmax/2023-03-15_plug_in_vcmax_jmax_and_get_Pmodel_output.xlsx')%>%
dplyr::select(SITE,gpp_calculated)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_PfL')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp_calculated )
Pmodel_S<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment_Pmodel_PPFD.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_P')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
Pmodel_F<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment P_model_fAPAR.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_Pf')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
dump_table3<-plyr::rbind.fill(Modis_GPP,Field_measurement_based_GPP,Pmodel_F,Pmodel_S,Pmodel_online)
Order_of_model <- c('in-situ','TRENDY_mean','CLASSIC','IBIS','LPJ','ORCHIDEE','VISIT','ISBA-CTRIP', # these are non- N coupled models
'CLM5.0',
'DLEM',
'ISAM',
'JSBACH',
'JULES',
'LPJ-GUESS',
'LPX-Bern',
'OCN',
'ORCHIDEE-CNP',
'ORCHIDEEv3',
'SDGVM',
'FLUXCOM','Pmodel_PfL','Pmodel_Pf','Pmodel_P','MODIS')
cls <- data.frame(model=Order_of_model, colour=c(rep('C only',8),rep('CN models',11),'FLUXCOM',rep('P-models',3),'MODIS'))
pattern = c(rep('none',17),'stripe','crosshatch')
temp_table<-dump_table3%>%
filter(name=='BOB')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
temp_table
library(tidyverse)
library(raster)
library(ggplot2)
library(ggpubr)
setwd('H:/Oxford/Chapter_three/github_version/5.compare_to_trendy_flux_com/')
dump_table_trendy<-openxlsx::read.xlsx('Extract_GEM_from_Trendy_fluxcom.xlsx')%>%
filter(model!='FLUXCOM')%>%
group_by(name)%>%
summarise( GPP_MgC_ha_year_sd = sd(GPP_MgC_ha_year,na.rm=T),
GPP_MgC_ha_year=mean(GPP_MgC_ha_year,na.rm=T))%>%
mutate(model = 'TRENDY_mean')
# Read in field Ghana data and calculate GPP
ghana_fGPP <- read.csv('H:/Oxford/Chapter_two/wirting_up/Ghana_aridity_transect_Carbon_cycle_/input_data/all_GPP_together_per_SITE_20221122.csv')%>%
dplyr::select(GPP,GPP_se)
# Read in MODIS GPP (Xiongjie downloaded this for me with GEE)
Modis_GPP <- read.csv('GPP_from_MODIS_GPP_Amazonia.csv')%>%
dplyr::select(Gpp,name,date,Psn_QC)%>%
filter(Gpp>0)%>% #REMOVE bad data
mutate(SITE = substr(name,1,3))%>%
rowwise()%>%
mutate( FparQC_binary=paste(rev(as.integer(intToBits(Psn_QC))), collapse=""),
# convert to binary
FparQC_binary = stringi::stri_sub(FparQC_binary,-8,-1),
# only last 8 digits are meaningful, remove other 0 at the start of the string
CLOUDSTATE = as.numeric(substr(FparQC_binary,4,5)))%>%
filter(CLOUDSTATE=='0' | CLOUDSTATE=='10')%>%
group_by(SITE)%>%
summarise(GPP=mean(Gpp) /8 *365 /1000/10000*10000)%>% # 20 years average, from kgc/m2/8day to MgC/ha/year, the *1000 is because MODIS gpp was recorded with 1000 scale to save disk space (see modis document)
dplyr::rename(name=SITE, GPP_MgC_ha_year=GPP)%>%
mutate(model = 'MODIS')
# Trait-based_GPP, P-model informed by Vcmax and Jmax field measured
Field_measurement_based_GPP<-openxlsx::read.xlsx( '../4.Figure_two_GPP_from_measured_Vcmax/2023-03-15_plug_in_vcmax_jmax_and_get_Pmodel_output.xlsx')%>%
dplyr::select(SITE,gpp_calculated)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_PfL')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp_calculated )
Pmodel_S<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment_Pmodel_PPFD.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_P')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
Pmodel_F<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment P_model_fAPAR.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_Pf')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
dump_table3<-plyr::rbind.fill(Modis_GPP,Field_measurement_based_GPP,Pmodel_F,Pmodel_S)
Order_of_model <- c('in-situ','TRENDY_mean','CLASSIC','IBIS','LPJ','ORCHIDEE','VISIT','ISBA-CTRIP', # these are non- N coupled models
'CLM5.0',
'DLEM',
'ISAM',
'JSBACH',
'JULES',
'LPJ-GUESS',
'LPX-Bern',
'OCN',
'ORCHIDEE-CNP',
'ORCHIDEEv3',
'SDGVM',
'FLUXCOM','Pmodel_PfL','Pmodel_Pf','Pmodel_P','MODIS')
cls <- data.frame(model=Order_of_model, colour=c(rep('C only',8),rep('CN models',11),'FLUXCOM',rep('P-models',3),'MODIS'))
pattern = c(rep('none',17),'stripe','crosshatch')
temp_table<-dump_table3%>%
filter(name=='BOB')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
BOB<-temp_table%>%
ggplot( ) +
geom_bar(stat="identity", aes(x=model, y=GPP_MgC_ha_year,fill=model),colour='black', alpha=.6, width=.4,size=0.2) + #models bar plot
xlab("Experiments") +
ylab("GPP (MgC/ha/yr)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=0.95,vjust=0.2)) +
geom_rect(data=ghana_fGPP[2,], inherit.aes=FALSE, aes(xmin=-Inf, xmax=Inf, ymin=min(GPP-GPP_se),
ymax=max(GPP+GPP_se)), color="transparent", fill="grey", alpha=0.3)+ # Field in situ measurements
geom_hline(yintercept=as.numeric(ghana_fGPP$GPP[2]), linetype='solid', col = '#e78ac3',size=1)+  # in-situ measurements
annotate("text", x = temp_table$model[1], y = ghana_fGPP$GPP[2]+2, label = "In-situ GPP", hjust = "inward",size=3.5)+
scale_fill_manual(values=c(  "#7fc97f" ,"#386cb0", "#fdc086",'#ffff99'),
name="Data sources")+
ggtitle('Site: BOB')+
theme(legend.position="none",plot.title = element_text(size = 10))+ylim(0,47)
stack_percetnage_plot<-ghana_fGPP[2,]%>%
dplyr::rename(GPP_MgC_ha_year=GPP)%>%
mutate(model='in-situ')%>%
plyr::rbind.fill(temp_table)%>%
filter(model!='TRENDY_mean')%>%
mutate(name='BOB')%>%
arrange(desc(GPP_MgC_ha_year))%>%
mutate(model=factor(model, levels = Order_of_model))
stack_percetnage_plot$percentage[1]<-(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[2])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[2]<-(stack_percetnage_plot$GPP_MgC_ha_year[2]-stack_percetnage_plot$GPP_MgC_ha_year[3])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[3]<-(stack_percetnage_plot$GPP_MgC_ha_year[3]-stack_percetnage_plot$GPP_MgC_ha_year[4])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
stack_percetnage_plot$percentage[4]<-(stack_percetnage_plot$GPP_MgC_ha_year[4]-stack_percetnage_plot$GPP_MgC_ha_year[5])/(stack_percetnage_plot$GPP_MgC_ha_year[1]-stack_percetnage_plot$GPP_MgC_ha_year[5])
percent <- function(x, digits = 2, format = "f", ...) {      # Create user-defined function
paste0(formatC(x * 100, format = format, digits = digits, ...), "%")
}
stack_percetnage_plot$percentage<-percent(stack_percetnage_plot$percentage,digits=0)
stack_percetnage_plot$percentage[5]<-''
stack_figure <- ggplot(stack_percetnage_plot) +
geom_bar(aes(x=' ', y=GPP_MgC_ha_year, fill = model),stat="identity",position = "identity") +
#   geom_text(aes(x=name,y=GPP_MgC_ha_year-3,label=percentage),size = 3, stat="identity",position = "identity")+
scale_fill_manual(values=c("#e78ac3","#7fc97f", "#386cb0" ,"#fdc086", "#ffff99"),
name="Data-model discrepency \nresolved by",
labels=c("unresolved discrepency","field trait" ,"field fapar", "optimality trait", " "))+
theme_bw()+
ylab('')+xlab('Diff')+
theme(legend.position="none")+ylim(0,47)
my_filnal_output<-egg::ggarrange(BOB,stack_figure,ncol=2, widths = c(10,1))
library(tidyverse)
library(raster)
library(ggplot2)
library(ggpubr)
setwd('F:/Oxford/Chapter_three/github_version/5.compare_to_trendy_flux_com/')
dump_table2<-openxlsx::read.xlsx('Extract_GEM_from_Trendy_fluxcom.xlsx')
trendy_mean<-dump_table2%>%
filter(model!='FLUXCOM')%>%
group_by(name)%>%
summarise( GPP_MgC_ha_year_sd = sd(GPP_MgC_ha_year,na.rm=T),
GPP_MgC_ha_year=mean(GPP_MgC_ha_year,na.rm=T))%>%
mutate(model = 'TRENDY_mean')
# Read in field Ghana data and calculate GPP
ghana_fGPP <- read.csv('../3.supplementary_compare_climate_variable/all_GPP_together_per_SITE_20221122.csv')%>%
dplyr::select(GPP,GPP_se)
# Read in MODIS GPP (Xiongjie downloaded this for me with GEE)
Modis_GPP <- read.csv('GPP_from_MODIS_GPP_Amazonia.csv')%>%
dplyr::select(Gpp,name,date,Psn_QC)%>%
filter(Gpp>0)%>% #REMOVE bad data
rowwise()%>%
mutate( FparQC_binary=paste(rev(as.integer(intToBits(Psn_QC))), collapse=""),
# convert to binary
FparQC_binary = stringi::stri_sub(FparQC_binary,-8,-1),
# only last 8 digits are meaningful, remove other 0 at the start of the string
CLOUDSTATE = as.numeric(substr(FparQC_binary,4,5)))%>%
filter(CLOUDSTATE=='0' | CLOUDSTATE=='10')%>%
mutate(SITE = substr(name,1,3))%>%
group_by(SITE)%>%
summarise(GPP=mean(Gpp) /8 *365 /1000/10000*10000)%>% # 20 years average, from kgc/m2/8day to MgC/ha/year, the *10000 is because MODIS gpp was recorded with 1000 scale to save disk space (see modis document)
dplyr::rename(name=SITE, GPP_MgC_ha_year=GPP)%>%
mutate(model = 'MODIS')
# Trait-based_GPP, P-model informed by Vcmax and Jmax field measured
Field_measurement_based_GPP<-openxlsx::read.xlsx( '../4.Figure_two_GPP_from_measured_Vcmax/2023-03-15_plug_in_vcmax_jmax_and_get_Pmodel_output.xlsx')%>%
dplyr::select(SITE,gpp_calculated)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_PfL')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp_calculated )
Pmodel_S<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment_Pmodel_PPFD.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel(Satellite)')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
Pmodel_F<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment P_model_fAPAR.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel(Field)')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
Pmodel_online<-openxlsx::read.xlsx('../4.Figure_two_GPP_from_measured_Vcmax/Experiment Pmodel_02023-03-15.xlsx')%>%
dplyr::select(SITE,gpp)%>%
mutate(SITE=substr(SITE,1,3),model='Pmodel_null')%>%
rename(name=SITE,GPP_MgC_ha_year =gpp )
dump_table3<-plyr::rbind.fill(dump_table2,Modis_GPP,Pmodel_online)
Order_of_model <- c('CLASSIC','IBIS','LPJ','ORCHIDEE','VISIT','ISBA-CTRIP', # these are non- N coupled models
'CLM5.0',
'DLEM',
'ISAM',
'JSBACH',
'JULES',
'LPJ-GUESS',
'LPX-Bern',
'OCN',
'ORCHIDEE-CNP',
'ORCHIDEEv3',
'SDGVM',
'FLUXCOM','MODIS','Pmodel_null')
cls <- data.frame(model=Order_of_model, colour=c(rep('C only',6),rep('CN models',11),'FLUXCOM','MODIS',rep('P-models',2)))
cls <- data.frame(model=Order_of_model, colour=c(rep('C only',6),rep('CN models',11),'FLUXCOM','MODIS',rep('P-models',1)))
pattern = c(rep('none',17),'stripe','crosshatch')
temp_table<-dump_table3%>%
filter(name=='ANK')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
ANK<-temp_table%>%
ggplot( ) +
geom_bar(stat="identity", aes(x=model, y=GPP_MgC_ha_year,fill=colour),colour='black', alpha=.6, width=.4,linewidth=0.2) + #models bar plot
xlab("Models") +
ylab("GPP (MgC/ha/yr)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=0.95,vjust=0.2)) +
geom_rect(data=ghana_fGPP[1,], inherit.aes=FALSE, aes(xmin=-Inf, xmax=Inf, ymin=min(GPP-GPP_se),
ymax=max(GPP+GPP_se)), color="transparent", fill="grey", alpha=0.3)+ # Field in situ measurements
geom_hline(yintercept=as.numeric(ghana_fGPP$GPP[1]), linetype='dotted', col = 'red',linewidth=1)+  # in-situ measurements
geom_hline(yintercept=trendy_mean$GPP_MgC_ha_year[trendy_mean$name=='ANK'], linetype='dotted', col = 'purple',linewidth=1)+ # models average
annotate("text", x = temp_table$model[7], y = ghana_fGPP$GPP[1]+2, label = "Mean of field measurements", hjust = "inward")+
#annotate("text", x = temp_table$model[7], y = trendy_mean$GPP_MgC_ha_year[trendy_mean$name=='ANK']+2, label = "Mean of TRENDY Models", hjust = "inward")+
theme(legend.position="none")+
scale_fill_manual(values=c( "#7b3294", "#c2a5cf" ,"#f7f7f7", "#008837",'black'),
name="Data sources")+ggtitle('(a) Site ANK')+ylim(0,47)
temp_table<-dump_table3%>%
filter(name=='BOB')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
BOB<-temp_table%>%
ggplot( ) +
geom_bar(stat="identity",aes(x=model, y=GPP_MgC_ha_year,fill=colour),colour='black', alpha=.6, width=.4,size=0.2) + #models bar plot
xlab("Models") +
ylab("GPP (MgC/ha/yr)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=0.95,vjust=0.2)) +
geom_rect(data=ghana_fGPP[2,], inherit.aes=FALSE, aes(xmin=-Inf, xmax=Inf, ymin=min(GPP-GPP_se),
ymax=max(GPP+GPP_se)), color="transparent", fill="grey", alpha=0.3)+
geom_hline(yintercept=as.numeric(ghana_fGPP$GPP[2]), linetype='dotted', col = 'red',size=1)+  # in-situ measurements
geom_hline(yintercept=trendy_mean$GPP_MgC_ha_year[trendy_mean$name=='BOB'], linetype='dotted', col = 'purple',size=1)+ # models average
annotate("text", x = temp_table$model[1], y = ghana_fGPP$GPP[2]+2, label = "Mean of field measurements", hjust = "inward")+
#annotate("text", x = temp_table$model[1], y = trendy_mean$GPP_MgC_ha_year[trendy_mean$name=='BOB']+2, label = "Mean of TRENDY Models", hjust = "inward")+
theme(legend.position="none")+
scale_fill_manual(values=c( "#7b3294", "#c2a5cf" ,"#f7f7f7", "#008837",'black'),
name="Data sources")+ggtitle('(b) Site BOB')+ylim(0,47)
temp_table<-dump_table3%>%
filter(name=='KOG')%>%
left_join(., cls, by = "model")%>%
drop_na(GPP_MgC_ha_year)
temp_table$model <- factor(temp_table$model, levels = Order_of_model)
KOG<-temp_table%>%
ggplot( aes(x=model, y=GPP_MgC_ha_year)) +
geom_bar(stat="identity",aes(x=model, y=GPP_MgC_ha_year, fill=colour),colour='black', alpha=.6, width=.4,size=0.2) + #models bar plot
xlab("Models") +
ylab("GPP (MgC/ha/yr)")+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, hjust=0.95,vjust=0.2)) +
geom_rect(data=ghana_fGPP[3,], inherit.aes=FALSE, aes(xmin=-Inf, xmax=Inf, ymin=min(GPP-GPP_se),
ymax=max(GPP+GPP_se)), color="transparent", fill="grey", alpha=0.3)+
geom_hline(yintercept=as.numeric(ghana_fGPP$GPP[3]), linetype='dotted', col = 'red',size=1)+  # in-situ measurements
geom_hline(yintercept=trendy_mean$GPP_MgC_ha_year[trendy_mean$name=='KOG'], linetype='dotted', col = 'purple',size=1)+ # models average
annotate("text", x = temp_table$model[1], y = ghana_fGPP$GPP[3]+2, label = "Mean of field measurements", hjust = "inward")+
#annotate("text", x = temp_table$model[1], y = trendy_mean$GPP_MgC_ha_year[trendy_mean$name=='KOG']+2, label = "Mean of TRENDY Models", hjust = "inward")+
theme(legend.position="right")+
scale_fill_manual(values=c( "#7b3294", "#c2a5cf" ,"#f7f7f7", "#008837",'black'),
name="Data sources")+ggtitle('(c) Site KOG')+ylim(0,47)
ANK
BOB
KOG
ggsave(ANK, file='ANK_data_model_compare2.jpg', width=3.42, height=4.18)
ggsave(BOB, file='BOB_data_model_compare2.jpg', width=3.42, height=4.18)
ggsave(KOG, file='KOG_data_model_compare2.jpg', width=4.23, height=4.18)
